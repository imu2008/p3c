<rules>
	<!-- Naming -->
	<rule key="ClassNamingShouldBeCamelRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-naming.xml/ClassNamingShouldBeCamelRule
		</configKey>
	</rule>
	<rule key="AbstractClassShouldStartWithAbstractNamingRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-naming.xml/AbstractClassShouldStartWithAbstractNamingRule
		</configKey>
	</rule>
	<rule key="ExceptionClassShouldEndWithExceptionRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-naming.xml/ExceptionClassShouldEndWithExceptionRule
		</configKey>
	</rule>
	<rule key="TestClassShouldEndWithTestNamingRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-naming.xml/TestClassShouldEndWithTestNamingRule
		</configKey>
	</rule>
	<rule key="LowerCamelCaseVariableNamingRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-naming.xml/LowerCamelCaseVariableNamingRule
		</configKey>
	</rule>
	<rule key="AvoidStartWithDollarAndUnderLineNamingRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-naming.xml/AvoidStartWithDollarAndUnderLineNamingRule
		</configKey>
	</rule>
	<rule key="ConstantFieldShouldBeUpperCaseRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-naming.xml/ConstantFieldShouldBeUpperCaseRule
		</configKey>
	</rule>
	<rule key="ServiceOrDaoClassShouldEndWithImplRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-naming.xml/ServiceOrDaoClassShouldEndWithImplRule
		</configKey>
	</rule>
	<rule key="PackageNamingRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-naming.xml/PackageNamingRule
		</configKey>
	</rule>
	<rule key="BooleanPropertyShouldNotStartWithIsRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-naming.xml/BooleanPropertyShouldNotStartWithIsRule
		</configKey>
	</rule>
	<rule key="ArrayNamingShouldHaveBracketRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-naming.xml/ArrayNamingShouldHaveBracketRule
		</configKey>
	</rule>
	
	
	<!-- Constants -->
	<rule key="UpperEllRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-constants.xml/UpperEllRule
		</configKey>
	</rule>
	
	<rule key="UndefineMagicConstantRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-constants.xml/UndefineMagicConstantRule
		</configKey>
	</rule>
	
	
	<!-- OOP -->
	<rule key="EqualsAvoidNullRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-oop.xml/EqualsAvoidNullRule
		</configKey>
	</rule>
	<rule key="WrapperTypeEqualityRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-oop.xml/WrapperTypeEqualityRule
		</configKey>
	</rule>
	<rule key="PojoMustUsePrimitiveFieldRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-oop.xml/PojoMustUsePrimitiveFieldRule
		</configKey>
	</rule>
	<rule key="PojoNoDefaultValueRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-oop.xml/PojoNoDefaultValueRule
		</configKey>
	</rule>
	<!-- 这条规则暂时取消
	<rule key="ConstructorNoBusinessLogicRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-oop.xml/ConstructorNoBusinessLogicRule
		</configKey>
	</rule>
	 -->
	<rule key="PojoMustOverrideToStringRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-oop.xml/PojoMustOverrideToStringRule
		</configKey>
	</rule>
	
	<!-- SETS -->
	<rule key="ClassCastExceptionWithToArrayRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-sets.xml/ClassCastExceptionWithToArrayRule
		</configKey>
	</rule>
	<rule key="UnsupportedExceptionWithModifyAsListRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-sets.xml/UnsupportedExceptionWithModifyAsListRule
		</configKey>
	</rule>
	<rule key="ClassCastExceptionWithSubListToArrayListRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-sets.xml/ClassCastExceptionWithSubListToArrayListRule
		</configKey>
	</rule>
	<rule key="ConcurrentExceptionWithModifyOriginSubListRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-sets.xml/ConcurrentExceptionWithModifyOriginSubListRule
		</configKey>
	</rule>
	<rule key="DontModifyInForeachCircleRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-sets.xml/DontModifyInForeachCircleRule
		</configKey>
	</rule>
	
	<!-- Concurrent -->
	<rule key="ThreadPoolCreationRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-concurrent.xml/ThreadPoolCreationRule
		</configKey>
	</rule>
	<rule key="AvoidUseTimerRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-concurrent.xml/AvoidUseTimerRule
		</configKey>
	</rule>
	<rule key="AvoidManuallyCreateThreadRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-concurrent.xml/AvoidManuallyCreateThreadRule
		</configKey>
	</rule>
	<rule key="ThreadShouldSetNameRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-concurrent.xml/ThreadShouldSetNameRule
		</configKey>
	</rule>
	<rule key="AvoidCallStaticSimpleDateFormatRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-concurrent.xml/AvoidCallStaticSimpleDateFormatRule
		</configKey>
	</rule>
	
	<!-- FLOW CONTROL -->
	<rule key="SwitchStatementRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-flowcontrol.xml/SwitchStatementRule
		</configKey>
	</rule>
	<rule key="NeedBraceRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-flowcontrol.xml/NeedBraceRule
		</configKey>
	</rule>

	<!-- Comments -->
	<rule key="CommentsMustBeJavadocFormatRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-comments.xml/CommentsMustBeJavadocFormatRule
		</configKey>
	</rule>

	<rule key="AbstractMethodOrInterfaceMethodMustUseJavadocRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-comments.xml/AbstractMethodOrInterfaceMethodMustUseJavadocRule
		</configKey>
	</rule>

	<rule key="ClassMustHaveAuthorRule">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-comments.xml/ClassMustHaveAuthorRule
		</configKey>
	</rule>

	<rule key="EnumConstantsMustHaveCommentRule">
		<priority>CRITICAL</priority>
		<configKey>rulesets/java/ali-comments.xml/EnumConstantsMustHaveCommentRule
		</configKey>
	</rule>

	<rule key="AvoidCommentBehindStatement">
		<priority>MAJOR</priority>
		<configKey>rulesets/java/ali-comments.xml/AvoidCommentBehindStatement
		</configKey>
	</rule>


	<!-- Others -->
	<rule key="AvoidPatternCompileInMethodRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-others.xml/AvoidPatternCompileInMethodRule
		</configKey>
	</rule>

	<rule key="AvoidApacheBeanUtilsCopyRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-others.xml/AvoidApacheBeanUtilsCopyRule
		</configKey>
	</rule>
	
	<rule key="AvoidNewDateGetTimeRule">
		<priority>BLOCKER</priority>
		<configKey>rulesets/java/ali-others.xml/AvoidNewDateGetTimeRule
		</configKey>
	</rule>

</rules>
