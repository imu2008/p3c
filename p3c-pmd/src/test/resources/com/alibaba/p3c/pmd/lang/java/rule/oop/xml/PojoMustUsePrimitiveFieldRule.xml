<?xml version="1.0" encoding="UTF-8"?>
<test-data>

	<code-fragment id="pojo-field-has-primitive-type">
		<![CDATA[
	public class FooDO {
		private static final int age;		// OK
		private String tom; 				// OK
		private boolean isBar;				// BAD
		private byte[] buffer;				// BAD
		private Long pageSize = 20;			// OK

		public void bar() {
			int pageNo = 1;
		}

		private static class NestedDTO {
			private String tom; 			// OK
			private boolean isBar;			// BAD
		}

		private static class InnerClass {
			private boolean isBar; 			// OK
		}
	}
		]]>
	</code-fragment>
	<test-code>
		<description>POJO属性包含默认值</description>
		<expected-problems>3</expected-problems>
		<code-ref id="pojo-field-has-primitive-type" />
	</test-code>

	<!-- ====================================================================== -->

	<code-fragment id="npe-bug-fix">
		<![CDATA[
	package com.alibaba.ak.codenavigator.biz.dto.kythe;
	import java.util.Date;
	import org.codehaus.jackson.annotate.JsonIgnoreProperties;
	import com.alibaba.ak.codenavigator.model.kythe.CodeComments;
	@JsonIgnoreProperties(value = {"codeComments"})
	public class CodeCommentDTO {
		private CodeComments codeComments;
		/**
		 * nickname
		 */
		private String nickName;
		/**
		 * 头像
		 */
		private String avatar;

		public CodeCommentDTO(CodeComments comment) {
			this.codeComments = comment;
		}
		public String getNickName() {
			return nickName;
		}

		public void setNickName(String nickName) {
			this.nickName = nickName;
		}
		public String getAvatar() {
			return avatar;
		}
		public void setAvatar(String avatar) {
			this.avatar = avatar;
		}
		public Long getId() {
			return codeComments.getId();
		}
		public Long getParentId() {
			return codeComments.getParentId();
		}

		public String getContent() {
			if (this.codeComments.getStatus() == 0) {
				return codeComments.getContent();
			}
			//已经删除
			return "该评论已被作者删除";
		}
		public Integer getStatus() {
			return codeComments.getStatus();
		}

		public Date getCreateTime() {
			return codeComments.getGmtCreate();
		}
		public Integer getStartLine() {
			return codeComments.getStartLine();
		}
		public Integer getStartColumn() {
			return codeComments.getStartColumn();
		}
		public Integer getEndLine() {
			return codeComments.getEndLine();
		}
		public Integer getEndColumn() {
			return codeComments.getEndColumn();
		}

	}
		]]>
	</code-fragment>
	<test-code>
		<description>NPE bugfix</description>
		<expected-problems>0</expected-problems>
		<code-ref id="npe-bug-fix" />
	</test-code>

</test-data>