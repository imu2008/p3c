<?xml version="1.0"?>

<ruleset name="AlibabaJavaNaming" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">


    <rule name="ClassNamingShouldBeCamelRule"
          language="java"
          since="1.6"
          message="类名使用UpperCamelCase风格，必须遵从驼峰形式，但以下情形例外：（领域模型的相关命名）DO / BO / DTO / VO / DAO等"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.ClassNamingShouldBeCamelRule">
        <description>
            <![CDATA[
    类名使用UpperCamelCase风格，必须遵从驼峰形式，但以下情形例外：（领域模型的相关命名）DO / BO / DTO / VO / DAO等
            ]]>
        </description>
        <priority>3</priority>
        <example>
            <![CDATA[
    类名使用UpperCamelCase风格，必须遵从驼峰形式，但以下情形例外：（领域模型的相关命名）DO / BO / DTO / VO / DAO等
            ]]>
        </example>
    </rule>

    <rule name="AbstractClassShouldStartWithAbstractNamingRule"
          language="java"
          since="1.4"
          message="抽象类命名使用Abstract或Base开头"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.AbstractClassShouldStartWithAbstractNamingRule">
        <description>
            <![CDATA[
抽象类命名使用Abstract或Base开头
            ]]>
        </description>
        <priority>2</priority>
        <example>
            <![CDATA[
    abstract class BaseControllerDemo{
    }

    abstract class AbstractActionDemo{
    }
            ]]>
        </example>
    </rule>

    <rule name="ExceptionClassShouldEndWithExceptionRule"
          language="java"
          since="1.6"
          message="异常类命名使用Exception结尾"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.ExceptionClassShouldEndWithExceptionRule">
        <description>
            <![CDATA[
异常类命名使用Exception结尾
            ]]>
        </description>
        <priority>2</priority>
        <example>
            <![CDATA[
    public class CacheDemoException extends Exception{
    }
            ]]>
        </example>
    </rule>


    <rule name="TestClassShouldEndWithTestNamingRule"
          language="java"
          since="1.6"
          message="测试类命名以它要测试的类的名称开始，以Test结尾"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.TestClassShouldEndWithTestNamingRule">
        <description>
            <![CDATA[
测试类命名以它要测试的类的名称开始，以Test结尾
            ]]>
        </description>
        <priority>3</priority>
        <example>
            <![CDATA[
    public class DemoTest {
    }
            ]]>
        </example>
    </rule>

    <rule name="LowerCamelCaseVariableNamingRule"
          language="java"
          since="1.6"
          message="方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase，必须遵从驼峰形式"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.LowerCamelCaseVariableNamingRule">
        <description>
            <![CDATA[
方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase，必须遵从驼峰形式
            ]]>
        </description>
        <priority>2</priority>
        <example>
            <![CDATA[
    方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase，必须遵从驼峰形式
            ]]>
        </example>
    </rule>

    <rule name="AvoidStartWithDollarAndUnderLineNamingRule"
          language="java"
          since="1.6"
          message="所有编程相关的命名均不能以下划线或美元符号开始"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.AvoidStartWithDollarAndUnderLineNamingRule">
        <description>
            <![CDATA[
所有编程相关的命名均不能以下划线或美元符号开始
            ]]>
        </description>
        <priority>2</priority>
        <example>
            <![CDATA[
    所有编程相关的命名均不能以下划线或美元符号开始
            ]]>
        </example>
    </rule>

    <rule name="ConstantFieldShouldBeUpperCaseRule"
          language="java"
          since="1.6"
          message="常量命名应该全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.ConstantFieldShouldBeUpperCaseRule">
        <description>
            <![CDATA[
常量命名应该全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长
            ]]>
        </description>
        <priority>2</priority>
        <example>
            <![CDATA[
    public class ConstantNameDemo {

    /**
    * 最大库存数
    */
    public static final Long MAX_STOCK_COUNT = 50000L;

    /**
    * 用户退款状态
    */
    public static final String USER_REFUND_STATUS = "USER_REFUND_STATUS";

    }
            ]]>
        </example>
    </rule>

    <rule name="ServiceOrDaoClassShouldEndWithImplRule"
          language="java"
          since="1.6"
          message="对于Service和DAO类，基于SOA的理念，暴露出来的服务一定是接口，内部的实现类用Impl的后缀与接口区别"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.ServiceOrDaoClassShouldEndWithImplRule">
        <description>
            <![CDATA[
对于Service和DAO类，基于SOA的理念，暴露出来的服务一定是接口，内部的实现类用Impl的后缀与接口区别
            ]]>
        </description>
        <priority>2</priority>
        <example>
            <![CDATA[
    public interface DemoService{
        void f();
    }

    public class DemoServiceImpl implements DemoService {
        @Override
        public void f(){
            System.out.println("hello world");
        }
    }
            ]]>
        </example>
    </rule>

    <rule name="PackageNamingRule"
          language="java"
          since="1.6"
          message="包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.PackageNamingRule">
        <description>
            <![CDATA[
包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式
            ]]>
        </description>
        <priority>3</priority>
        <example>
            <![CDATA[
    com.alibaba.mpp.util / com.taobao.tddl.domain.dto
            ]]>
        </example>
    </rule>

    <rule name="BooleanPropertyShouldNotStartWithIsRule"
          language="java"
          since="1.6"
          message="POJO类中的任何布尔类型的变量，都不要加is，否则部分框架解析会引起序列化错误"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.BooleanPropertyShouldNotStartWithIsRule">
        <description>
            <![CDATA[
POJO类中的任何布尔类型的变量，都不要加is，否则部分框架解析会引起序列化错误
            ]]>
        </description>
        <priority>2</priority>
        <example>
            <![CDATA[
    public class DemoDO{
        Boolean success;
        Boolean delete;
    }
            ]]>
        </example>
    </rule>

    <rule name="ArrayNamingShouldHaveBracketRule"
          language="java"
          since="1.6"
          message="中括号是数组类型的一部分，数组定义如下：String[] args"
          class="com.alibaba.p3c.pmd.lang.java.rule.naming.ArrayNamingShouldHaveBracketRule">
        <description>
            <![CDATA[
中括号是数组类型的一部分，数组定义如下：String[] args
            ]]>
        </description>
        <priority>3</priority>
        <example>
            <![CDATA[
    String[] a = new String[3];
            ]]>
        </example>
    </rule>

</ruleset>
