<?xml version="1.0"?>

<ruleset name="Sets" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
 
	<rule name="ClassCastExceptionWithToArrayRule"
		message="使用集合转数组的方法，必须使用集合的toArray(T[] array)，传入的是类型完全一样的数组，大小就是list.size()"
		class="com.alibaba.p3c.pmd.lang.java.rule.sets.ClassCastExceptionWithToArrayRule">
		<description>
            【强制】使用集合转数组的方法，必须使用集合的toArray(T[] array)，传入的是类型完全一样的数组，大小就是list.size()。
        </description>
		<priority>1</priority>

		<example>
      <![CDATA[
       //【强制】使用集合转数组的方法，必须使用集合的toArray(T[] array)，传入的是类型完全一样的数组，大小就是list.size()。
	   public class Foo {   
            private void processUpperEll(long aLong) {
              // warn
              Integer[] a = (Integer [])c.toArray();

              // ok
              Integer[] b = (Integer [])c.toArray(new Integer[c.size()]);
             } 
        }
       ]]>
      </example>
	</rule>

	<rule name="UnsupportedExceptionWithModifyAsListRule"
		message="使用工具类Arrays.asList()把数组转换成集合时，不能使用其修改集合相关的方法，它的add/remove/clear方法会抛出UnsupportedOperationException异常。"
		class="com.alibaba.p3c.pmd.lang.java.rule.sets.UnsupportedExceptionWithModifyAsListRule">
		<description>
            【强制】使用工具类Arrays.asList()把数组转换成集合时，不能使用其修改集合相关的方法，它的add/remove/clear方法会抛出UnsupportedOperationException异常。
        </description>
		<priority>1</priority>

		<example>
      <![CDATA[
       public class Foo {   
            private void method(){
			    List<String> t   = Arrays.asList("a","b","c"); 
			    //warn
			    t.add("22");
			    //warn
			    t.remove("22");
			    //warn
			    t.clear();
			}
        }
       ]]>
      </example>
	</rule>

    <rule name="ClassCastExceptionWithSubListToArrayListRule"
		message="ArrayList的subList结果不可强转成ArrayList，否则会抛出ClassCastException异常。"
		class="com.alibaba.p3c.pmd.lang.java.rule.sets.ClassCastExceptionWithSubListToArrayListRule">
		<description>
            【强制】ArrayList的subList结果不可强转成ArrayList，否则会抛出ClassCastException异常。
        </description>
		<priority>1</priority>

		<example>
      <![CDATA[
      public class Foo {   
            private void method() { 
                  List<String> list = new ArrayList<String>();
                  list.add("22");
                  //warn
                  List<String> test = (ArrayList<String>) list.subList(0, 1);	   
             } 
      }
       ]]>
      </example>
	</rule>
	 
	<rule name="ConcurrentExceptionWithModifyOriginSubListRule"
		message="在subList场景中，高度注意对原列表的修改，会导致子列表的遍历、增加、删除均产生ConcurrentModificationException异常。"
		class="com.alibaba.p3c.pmd.lang.java.rule.sets.ConcurrentExceptionWithModifyOriginSubListRule">
		<description>
            【强制】在subList场景中，高度注意对原列表的修改，会导致子列表的遍历、增加、删除均产生ConcurrentModificationException异常。
        </description>
		<priority>1</priority>

		<example>
      <![CDATA[
      public class Foo {   
            private void method() { 
                  List<String> originList = new ArrayList<String>();
                  originList.add("22");
                  List<String> subList = originList.subList(0, 1);
                  //warn
                  originList.add("22");
             } 
      }
       ]]>
      </example>
	</rule>
	
	
	<rule name="DontModifyInForeachCircleRule"
		message="不要在foreach循环里进行元素的remove/add操作，remove元素请使用Iterator方式。"
		class="com.alibaba.p3c.pmd.lang.java.rule.sets.DontModifyInForeachCircleRule">
		<description>
           【强制】不要在foreach循环里进行元素的remove/add操作，remove元素请使用Iterator方式。
        </description>
		<priority>1</priority>

		<example>
      <![CDATA[
      public class Foo {   
            private void method() { 
                  List<String> originList = new ArrayList<String>();
                  originList.add("22");
                  for (String item : originList) { 
                     //warn
                     list.add("bb");
                  } 
             } 
      }
       ]]>
      </example>
	</rule>
</ruleset>